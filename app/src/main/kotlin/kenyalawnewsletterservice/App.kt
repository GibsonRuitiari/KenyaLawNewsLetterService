/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package kenyalawnewsletterservice

import com.github.ajalt.clikt.core.CliktCommand
import com.github.ajalt.clikt.core.requireObject
import com.github.ajalt.clikt.core.subcommands
import com.github.ajalt.clikt.parameters.arguments.argument
import com.github.ajalt.clikt.parameters.options.versionOption
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.async
import kotlinx.coroutines.runBlocking

/* Entry point */
class KenyaLawNewsLettersApp(){
    private val newsLettersLinksService = DependencyProvider.getNewsLetterLinksService()
    private val caseContentService = DependencyProvider.getCaseContentService()

    suspend fun getPost2014NewsLettersLinks() = newsLettersLinksService.getPost2014NewsLetters()
    suspend fun getPre2011NewsLettersLinks() = newsLettersLinksService.getPre2011NewsLetters()
    suspend fun getCaseContent(caseLink:String) = retryIO(times = 4) {
        caseContentService.getCaseDetailsWhenGivenCaseLink(caseLink) }

}

/* Commands  */
class KenyaLawNewsLetterServiceCommand:CliktCommand("""
    Kenya Law News-Letter service is a command line that enables you
    to pull news letters from the kenya law website.
    The News-letters are divided into two sections: pre2011 and post 2014
    The reason for the division is due to the differences of the news-letters belonging to the periods.
        
    This tool gives you the content in form of json.
    Note: depending on your network fetching of some objects like post 2014 news-letters links
    might take time; In case of a network error, the tool will retry as many times as possible, in order to
    give you your results.
    
    Usage: in your terminal do
    post2014NewsLetters
    
    Developed by OCLUSE
""".trimIndent(), name = "news-letters"){
    init {
        versionOption("1.0")
    }
    override fun run() {
       val kenyaLawNewsLetterApp = KenyaLawNewsLettersApp()
        currentContext.obj = kenyaLawNewsLetterApp
    }
}
class CaseContentCommand:CliktCommand(name="caseContent", help = """
    Gets the contents of a case when given a case link.
    The result is in form a json string. 
    Note: the json string might be null if parser couldn't be able to parse the case
    link provided.
    This command won't parse anything if a case link is not given!
    example usage:
    caseContent http://kenyalaw.org/caselaw/cases/view/160865/ 
""".trimIndent()){
    private val caseLink:String by argument("case-link", help = "Case link to use to get the content")
    private val kenyaLawNewsLettersApp:KenyaLawNewsLettersApp by requireObject()
    override fun run() {
        try {
            runBlocking {
                if (caseLink.isEmpty() || caseLink.isBlank()){
                    echo("case link cannot be blank!!!")
                    return@runBlocking
                }else{
                    val caseContent=async(Dispatchers.IO){ kenyaLawNewsLettersApp.getCaseContent(caseLink) }
                    val content = caseContent.await()
                    content?.let {
                        echo(it)
                    }
                }
            }
        }finally {
            echo("Exiting..")
        }
    }
}
class Post2014NewsLetterLinksCommand:CliktCommand(name = "post2014NewsLetters", help = """
    This commands enables you to get news-letters links for the years 2014-current year
    
    The news-letters objects returned by this command will be in json format.
    example usage:
    post2014NewsLetters
""".trimIndent()){
    private val kenyaLawNewsLettersApp:KenyaLawNewsLettersApp by requireObject()
    override fun run() {
        try {
            runBlocking {
                val newsLettersLinks = async(Dispatchers.IO){ kenyaLawNewsLettersApp.getPost2014NewsLettersLinks() }
                val content = newsLettersLinks.await()
                content?.let { cont->
                    echo(cont)
                }
            }
        }finally {
            echo("Exiting..")
        }
    }
}

class Pre2011NewsLetterLinksCommand:CliktCommand(name = "pre2011NewsLetters",
    help = """
    This commands enables you to get news-letters links for the years 2008-2011
   
    The news-letters objects returned by this command will be in json format.
    example usage
    pre2011NewsLetters
""".trimIndent()){
    private val kenyaLawNewsLettersApp:KenyaLawNewsLettersApp by requireObject()

    override fun run() {
        try {
            runBlocking {
                val pre2011 = async(Dispatchers.IO) { kenyaLawNewsLettersApp.getPre2011NewsLettersLinks() }
                val content=pre2011.await()
                content?.let {
                    echo(it)
                }
            }
        }finally {
            echo("Exiting..")
        }
    }
}
fun main(args:Array<String>) = KenyaLawNewsLetterServiceCommand()
    .subcommands(Pre2011NewsLetterLinksCommand(),
        Post2014NewsLetterLinksCommand(),
        CaseContentCommand())
    .main(args)



